@model WebVolait.ViewModels.AlterarSenhaClienteViewModel

@{
    ViewBag.Title = "AlterarSenha";
}

<main class="content-main update-passoword margin">
    <div class="container">
        <div class="form-container">
            <form id="update-passoword" class="form" action="#">
                <div class="form__area-flex-title">
                    <h2 class="form__title">Alterar senha</h2>
                </div>
                <div class="form__area">
                    @Html.LabelFor(model => model.SenhaAtual, htmlAttributes: new { @class = "form__area__label" })
                    @Html.EditorFor(model => model.SenhaAtual, new { htmlAttributes = new { @class = "form__area__input" } })
                </div>
                <div class="form__area">
                    @Html.LabelFor(model => model.NovaSenha, htmlAttributes: new { @class = "form__area__label" })
                    @Html.EditorFor(model => model.NovaSenha, new { htmlAttributes = new { @class = "form__area__input" } })
                </div>
                <div class="form__area">
                    @Html.LabelFor(model => model.ConfirmarSenha, htmlAttributes: new { @class = "form__area__label" })
                    @Html.EditorFor(model => model.ConfirmarSenha, new { htmlAttributes = new { @class = "form__area__input" } })
                </div>
            </form>
            <div class="form__area-flex flex-button">
                <input class="button button--grey" type="button" value="Cancelar">
                <input form="update-passoword" class="button button--blue" type="submit" value="Salvar">
            </div>
        </div>
    </div>
</main>


@*<h2>AlterarSenha</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>AlterarSenhaClienteViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SenhaAtual, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SenhaAtual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SenhaAtual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NovaSenha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NovaSenha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NovaSenha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmarSenha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmarSenha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmarSenha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}*@

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
