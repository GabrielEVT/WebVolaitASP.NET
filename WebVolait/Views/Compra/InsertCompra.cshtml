@model WebVolait.Models.Compra

@{
    ViewBag.Title = "InsertCompra";
}

@*<h2>InsertCompra</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Compra</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.NotaFiscal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.NotaFiscal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NotaFiscal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCompra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataCompra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataCompra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.ValorTotal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ValorTotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorTotal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPFCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPFCliente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPFCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cupom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cupom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cupom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodTipoPagto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodTipoPagto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodTipoPagto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantidadePassagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuantidadePassagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuantidadePassagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.HiddenFor(model => model.Passagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Passagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Passagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
<main class="content-main sign-up-employee margin">
    <div class="container">
        <div class="form-container">
            <form action="~/Compra/InsertCompra" method="post" class="form form-sign-up-employee">
                        @Html.HiddenFor(model => model.NotaFiscal, new { htmlAttributes = new { @class = "form__area__input" } })
                        @Html.HiddenFor(model => model.Passagem, new { htmlAttributes = new { @class = "form__area__input" } })
                @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                <div class="form__area-flex-title">
                    <h2 class="form__title">Realizar Compra</h2>
                </div>
                <div class="form__area-flex">
                    <div class="form__area">
                        @Html.HiddenFor(model => model.NotaFiscal, htmlAttributes: new { @class = "form__area__label" })
                        @Html.ValidationMessageFor(model => model.NotaFiscal, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>
                    
                    <div class="form__area">
                        @Html.EditorFor(model => model.DataCompra, new { htmlAttributes = new { @class = "form__area__input" } })
                        @Html.LabelFor(model => model.DataCompra, htmlAttributes: new { @class = "form__area__label" })
                        @Html.ValidationMessageFor(model => model.DataCompra, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>
                </div>
                <div class="form__area-flex">
                    <div class="form__area">
                        @Html.HiddenFor(model => model.ValorTotal, htmlAttributes: new { @class = "form__area__input" })
                        @Html.HiddenFor(model => model.ValorTotal, new { htmlAttributes = new { @class = "form__area__label" } })
                        @Html.ValidationMessageFor(model => model.ValorTotal, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>
                </div>
                <div class="form__area-flex">
                    <div class="form__area">
                        @Html.EditorFor(model => model.CPFCliente, new { htmlAttributes = new { @class = "form__area__input" } })
                        @Html.LabelFor(model => model.CPFCliente, htmlAttributes: new { @class = "form__area__label" })
                        @Html.ValidationMessageFor(model => model.CPFCliente, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>
                    <div class="form__area">
                        @Html.EditorFor(model => model.Cupom, new { htmlAttributes = new { @class = "form__area__input" } })
                        @Html.LabelFor(model => model.Cupom, htmlAttributes: new { @class = "form__area__label" })
                        @Html.ValidationMessageFor(model => model.Cupom, "", htmlAttributes: new { @class = "form__area__error-message" })
                       
                    </div>
                </div>
                <div class="form__area-flex">
                    <div class="form__area">
                        @*@Html.DropDownList("Método de pagamento:", new List<SelectListItem>{ 
                            new SelectListItem{Text="Cartão de Crédito", Value="1"},
                            new SelectListItem{Text="Cartão de Débito", Value="2"},
                            new SelectListItem{Text="Cheque", Value="3"},
                            new SelectListItem{Text="Boleto Bancário", Value="4"},
                            new SelectListItem{Text="PIX", Value="5"},
                        })</hr>*@

                        @Html.EditorFor(model => model.CodTipoPagto, new { htmlAttributes = new { @class = "form__area__input" } })
                        @Html.LabelFor(model => model.CodTipoPagto, htmlAttributes: new { @class = "form__area__label" })
                        @Html.ValidationMessageFor(model => model.CodTipoPagto, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>
                    <div class="form__area">
                        @Html.EditorFor(model => model.QuantidadePassagem, new { htmlAttributes = new { @class = "form__area__input" } })
                        @Html.LabelFor(model => model.QuantidadePassagem, htmlAttributes: new { @class = "form__area__label" })
                        @Html.ValidationMessageFor(model => model.QuantidadePassagem, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>
                </div>
                <div class="form__area-flex">
                    @*<div class="form__area">
                        @Html.EditorFor(model => model.QuantidadePassagem, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.QuantidadePassagem, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.ValidationMessageFor(model => model.QuantidadePassagem, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>*@
                    <div class="form__area">
                        @Html.HiddenFor(model => model.Passagem, new { htmlAttributes = new { @class = "form__area__input" } })
                        @Html.HiddenFor(model => model.Passagem, htmlAttributes: new { @class = "form__area__label" })
                        @Html.ValidationMessageFor(model => model.Passagem, "", htmlAttributes: new { @class = "form__area__error-message" })
                    </div>
                </div>
                <br /><br />
                

                <div class="form__area-flex flex-button">
                    <input class="button button--grey" type="reset" value="Cancelar">
                    <input class="button button--blue" type="submit" value="Realizar Pagamento">
                </div>
            </form>

        </div>
    </div>
</main>

